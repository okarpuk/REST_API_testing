
============================== JSON =========================================

JSON - JavaScript Object Notation, текстовый формат, используемый для обмена данными, основанный на JavaScript.

ОБЪЕКТ - это набор свойств с их значениями.
В контексте JSON КЛЮЧОМ является НАИМЕНОВАНИЕ свойства объекта, а ЗНАЧЕНИЕМ - СОДЕРЖИМОЕ этого свойства.

Например, у человека есть такие свойства, как цвет глаз, цвет волос, рост, пол и т. д.
Опишем Леонардо ДиКаприо в формате JSON:
{
    "name": "Leonardo",
    "lastName": "DiCaprio",
    "age": 48,
    "gender": "male",
    "profession": "actor"
}

В результате МЫ ПОЛУЧИЛИ JSON (объект), в котором указаны различные свойства.
Ключи "name", "lastName" и прочие представляют наименования свойств, а значения "Leonardo", "DiCaprio" обозначают содержимое этих свойств.

JSON всегда является объектом, состоящим из ПАР - КЛЮЧ: ЗНАЧЕНИЕ. 

Несколько общих ПРАВИЛ по работе с JSON:
	- JSON-объект всегда находится внутри фигурных скобок - {}.
	- Ключ всегда является строкой и оборачивается в двойные "key" кавычки.
	- После каждой пары ключ: значение ставится запятая, за исключением последней пары.
	- Пару ключ: значение обычно называют "полем".






У ЗНАЧЕНИЯ могут быть РАЗНЫЕ ТИПЫ данных:

1) STRING - строка. Строки всегда оборачиваются в ДВОЙНЫЕ кавычки: {"key": "value"}. Использование одинарных кавычек в JSON недопустимо: {'key': 'value'}.
	Пример: "name": "Dmitriy"
 
2) NUMBER - числа (целые и с плавающей точкой). Числа НЕ ОБОРАЧИВАЮТСЯ в кавычки.
	Примеры: "age": 43
 
3) INTEGER - только ЦЕЛЫЕ числа. Integer является подтипом number.
	Пример: "price": 12000
 
4) BOOLEAN - true или false. Прописываются без кавычек и с маленькой буквы.
	Пример: "wantsNewsletter": true
 
array - массив. Массив является контейнерным типом данных и оборачивается в квадратные скобки []. В JSON, в массиве можно хранить любые типы данных.
Пример типа данных array:
"myArray": [ "Hi", 28, true, 3.26, "36", {"foo": "bar"} ]
 
null - явное отсутствие значения. В данном типе данных, значением, может являться только null. 
Пример типа данных null:
"lastName": null
Примечание 1.
null отличается от числа 0 и от пустой строки "", т. к. 0 и "" - являются значениеми. В свою очередь null -  это отсутствие значения.
Примечание 2.
Значение null - также, как числа и булевы значения прописывается без кавычек и с маленькой буквы.
 
nested object - вложенный объект. Значением поля, может являться вложенный объект. Менее формально, можно сказать, что значением поля, может являться JSON.
Пример вложенного объекта:
{"user": {"name": "Alex", "city": "Moscow"}}





Итоги урока
Основное:

JSON является объектом.
JSON прописывается внутри фигурных скобок {}.
JSON представляет собой неупорядоченный набор пар ключ: значение, разделённых символом двоеточия :.
Стиль и формат:

JSON не чувствителен к отступам. Но отступы часто используют для улучшения читаемости.
После каждой пары ключ: значение проставляется запятая, кроме последней пары.
JSON чувствителен к регистру. True - не правильно, true - правильно. Null - не правильно, null - правильно.
Ключи и значения:

Ключ всегда является строкой и оборачивается в кавычки.
Значением может быть любой тип данных: string, number или integer, array, boolean, null, nested object.
Ключ - это наименование свойства, а значение - это содержимое этого свойства.
Массивы:

Массив или array - это упорядоченный набор данных, который может состоять из любых типов данных.
Массивы обозначаются квадратными скобками [].

























